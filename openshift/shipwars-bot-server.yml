apiVersion: v1
kind: Template

metadata:
  name: shipwars-bot-server

parameters:
  - name: CONFIG_MAP_NAME
    required: true
  - name: NAMESPACE
    required: true

objects:
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      annotations:
        app.openshift.io/connects-to: >-
          [{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"shipwars-move-server"}]
      namespace: ${NAMESPACE}
      name: shipwars-bot-server
      labels:
        app: shipwars-bot-server
        app.kubernetes.io/component: shipwars-bot-server
        app.kubernetes.io/instance: shipwars-bot-server
        app.kubernetes.io/part-of: shipwars-game
        app.openshift.io/runtime: nodejs
        app.openshift.io/runtime-namespace: ${NAMESPACE}
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        app: shipwars-bot-server
        deploymentconfig: shipwars-bot-server
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: shipwars-bot-server
            deploymentconfig: shipwars-bot-server
        spec:
          containers:
            - terminationMessagePath: /dev/termination-log
              name: shipwars-bot-server
              resources:
                requests:
                  cpu: 250m
                  memory: 256Mi
                limits:
                  cpu: 250m
                  memory: 256Mi
              ports:
                - containerPort: 8080
                  protocol: TCP
              imagePullPolicy: IfNotPresent
              terminationMessagePolicy: File
              envFrom:
                - configMapRef:
                    name: ${CONFIG_MAP_NAME}
              image: quay.io/evanshortiss/shipwars-bot-server:latest
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler

  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        app.openshift.io/connects-to: '[{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"shipwars-move-server"}]'
      labels:
        app: shipwars-bot-server
        app.kubernetes.io/component: shipwars-bot-server
        app.kubernetes.io/instance: shipwars-bot-server
        app.kubernetes.io/part-of: shipwars-game
        app.openshift.io/runtime-version: latest
      name: shipwars-bot-server
      namespace: ${NAMESPACE}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: shipwars-bot-server
        deploymentconfig: shipwars-bot-server
      sessionAffinity: None
      type: ClusterIP
