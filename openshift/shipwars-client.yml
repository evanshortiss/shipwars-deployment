apiVersion: v1
kind: Template

metadata:
  name: shipwars-client

parameters:
  - name: CONFIG_MAP_NAME
    required: true
  - name: NAMESPACE
    required: true

objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: shipwars-client
      annotations:
        app.openshift.io/connects-to: '[{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"shipwars-game-server"}]'
      generation: 3
      labels:
        app: shipwars-client
        app.kubernetes.io/component: shipwars-client
        app.kubernetes.io/instance: shipwars-client
        app.kubernetes.io/part-of: shipwars-game
        app.openshift.io/runtime: nginx
        app.openshift.io/runtime-namespace: ${NAMESPACE}
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: shipwars-client
        deploymentconfig: shipwars-client
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: shipwars-client
            deploymentconfig: shipwars-client
        spec:
          containers:
          - image: quay.io/evanshortiss/shipwars-client:latest
            imagePullPolicy: IfNotPresent
            name: shipwars-client
            ports:
            - containerPort: 8080
              protocol: TCP
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 100m
                memory: 128Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
      - type: ConfigChange

  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        app.openshift.io/connects-to: '[{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"shipwars-game-server"}]'
      labels:
        app: shipwars-client
        app.kubernetes.io/component: shipwars-client
        app.kubernetes.io/instance: shipwars-client
        app.kubernetes.io/part-of: shipwars-game
        app.openshift.io/runtime-version: latest
      name: shipwars-client
      namespace: ${NAMESPACE}
    spec:
      ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: shipwars-client
        deploymentconfig: shipwars-client
      sessionAffinity: None
      type: ClusterIP

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations:
        app.openshift.io/connects-to: '[{"apiVersion":"apps.openshift.io/v1","kind":"DeploymentConfig","name":"shipwars-game-server"}]'
      labels:
        app: shipwars-client
        app.kubernetes.io/component: shipwars-client
        app.kubernetes.io/instance: shipwars-client
        app.kubernetes.io/part-of: shipwars-game
        app.openshift.io/runtime-version: latest
      name: shipwars-client
      namespace: ${NAMESPACE}
    spec:
      port:
        targetPort: 8080-tcp
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: shipwars-client
        weight: 100
      wildcardPolicy: None
